{
  "name": "jst",
  "description": "Node JavaScript Template, A pretty high performance template engine",
  "version": "0.0.13",
  "author": {
    "name": "Shaun Li",
    "email": "shonhen@gmail.com"
  },
  "keywords": [
    "template",
    "engine",
    "jst"
  ],
  "main": "./lib/jst.js",
  "dependencies": {
    "locales": ">0.0.1"
  },
  "readme": "# Node JavaScript Template\n\n Node-jst is a pretty high performance template engine and implemented\n with JavaScript for Node.js\n\n## Installation\n\nvia npm:\n\n    npm install jst\n\n## Features\n\n  * Automatically caching of intermediate JavaScript\n  * Unbuffered code for embed codes etc `{% code %}` or `{{ variable }}`\n  * Enforcing coding standard, for example `{{ variable }}` is correct, but `{{variable}}` is wrong\n  * Customizable filters\n\n## Example\n\n    {% if (user) { %}\n      <h2>{{ user.name }}</h2>\n    {% } %}\n\n## Usage\n\n    var jst = require('jst');\n\n    // Render a string\n    jst.render('Hello {{ name }}', {name: 'jst'});\n\n    // Render a file\n    jst.renderFile('path/to/some.html', {name: 'jst'}, function(err, ctx) {\n      // second arg are optional,\n      // the callback can be the second arg\n    });\n\n    // Compile a function\n    var fn = jst.compile('Hello {{ name }}');\n    fn({name: 'jst'});\n\n    // Use `it.` as prefix of variables so that you can run it more than 30 times faster\n    jst.render('Hello {{ it.name }}', {name: 'jst'});\n\n    // Filters\n    jst.render('Hello {{ it.name|e }}', {name: '<strong>jst</strong>'});\n    jst.render('{{ it.entry|e|linebreaks }}', {entry: '...'});\n    jst.render('{{ it.value|add(123) }}', {value: 123});\n\n    // Custom filters\n    jst.addFilter('filterName', function(src) { ... });\n    jst.addFilters({anotherFilter: function(src) { ... }});\n    jst.render('{{ it.value|filterName }}', {value: 123});\n    jst.render('{{ it.value|anotherFilter }}', {value: 123});\n    // or\n    jst.addFilter('filterName', function(arg1, arg2, arg3) { return function(src) { ... }});\n    jst.render('{{ it.value|filterName(1, 2, 3) }}', {value: 123});\n\n    // Client side\n    <script src=\"jst.js\"></script>\n    <script>\n      jst.render('Hello {{ it.name }}', {name: 'jst'});\n    </script>\n\n## Benchmarks\n\n  [A brief comparison of some JavaScript templating engines on a short\n  template: 7 DOM nodes ... 7 interpolated values.][link]\n\n  [link]: http://jsperf.com/dom-vs-innerhtml-based-templating/144\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 Shaun Li <shonhen@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n",
  "readmeFilename": "Readme.md",
  "_id": "jst@0.0.13",
  "dist": {
    "shasum": "f2a8b6e8ba670ae20485878669059639cf95c55b"
  },
  "_from": "jst@",
  "_resolved": "https://registry.npmjs.org/jst/-/jst-0.0.13.tgz"
}
